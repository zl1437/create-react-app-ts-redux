{"version":3,"sources":["components/btn/bottomBtn.tsx","api/staff.ts","container/editMember.tsx","util/axios.ts"],"names":["BottomBtn","props","_this","Object","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","_this$props","title","btnDisabled","react__WEBPACK_IMPORTED_MODULE_6__","className","antd_mobile_es_button__WEBPACK_IMPORTED_MODULE_0__","type","disabled","onClick","click","React","__webpack_require__","d","__webpack_exports__","getStaffList","getstaffOperation","getCompanyList","staffDel","_util_axios__WEBPACK_IMPORTED_MODULE_0__","params","get","post","openid","Hello","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","changePhone","value","phones","setState","phone","test","hasError","changeMust","param","str","replace","length","antd_mobile_es_toast__WEBPACK_IMPORTED_MODULE_2__","info","concat","onErrorClick","checkEmail","mail","fail","submitEdit","_this$state","company","name","work","relation","company_id","staff_id","memberType","cellphone","email","nickname","position","then","data","status","history","go","companyInit","companyList","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","changeCompany","e","changeSelectCompany","persist","target","map","el","id","Number","checkFromSource","search","location","qs","parse","substring","courseId","showRelation","document","_this2","_this$state2","react__WEBPACK_IMPORTED_MODULE_8__","onChange","selected","style","display","item","i","key","antd_mobile_es_input_item__WEBPACK_IMPORTED_MODULE_0__","placeholder","clear","error","_components_btn_bottomBtn__WEBPACK_IMPORTED_MODULE_10__","siteEnv","getEnv","localStorage","getItem","JSON","axios","defaults","baseURL","LinkHost","headers","interceptors","request","use","config","Promise","resolve","reject","response","instanceAxios","options","url","arguments","undefined","hasOpenId","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","bind"],"mappings":"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","file":"static/js/37.294bdf7f.chunk.js","sourcesContent":["import * as React from \"react\";\n\nimport { Button } from 'antd-mobile'\nimport './btn.less'\ninterface ISprops {\n    [propsName: string]: any\n}\ninterface IState {\n    [statesName: string]: any\n}\n\nclass BottomBtn extends React.Component<ISprops, IState>{\n    constructor(props: any) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() {\n        const { title, btnDisabled } = this.props;\n        return (\n            <div className=\"bottom-btn\">\n                <Button type=\"primary\" disabled={btnDisabled} className=\"btn\" onClick={this.props.click}>{title}</Button>\n            </div>\n        )\n    }\n}\nexport default BottomBtn","\nimport { get, post } from '../util/axios';\n\n\nexport const getStaffList = (params: any) => get('/staff/staffList', params,false);//获取员工信息\n\n\n\nexport const getstaffOperation = (params: any) => post('/staff/staffOperation', params,{openid: true});//员工新增\n\n\nexport const getCompanyList = (params: any) => post('/Home/getCompanyList', params,{openid: true});//公司列表\n\n\nexport const staffDel = (params: any) => get('/staff/staffDel', params,false);//删除员工","//react 基础组件加载\nimport * as React from \"react\";\n\nimport { InputItem, Toast } from 'antd-mobile'\nimport qs from 'qs'\nimport BottomBtn from '../components/btn/bottomBtn'\n\n\nimport { getCompanyList, getstaffOperation } from '../api/staff'\nimport '../assets/less/edit.less'\n\n\ninterface ISprops {\n    [propName: string]: any;\n}\ninterface IState {\n    company: string,\n    name: string,\n    phone: string,\n    work: string,\n    mail: string,\n    hasError: boolean,\n    relation: any,\n    companyList: any,\n    company_id: any,\n    courseId: any,\n    staff_id: any,//员工id 新增没有 修改有\n    memberType: any,//来源管理 人员管理进入1 课程进入0\n    btnDisabled: any,\n    showRelation: any\n}\nexport default class Hello extends React.Component<ISprops, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            company: '',\n            name: '',\n            phone: '',\n            work: '',\n            mail: '',\n            hasError: false,\n            relation: '',\n            companyList: [],\n            company_id: '',\n            courseId: '',\n            staff_id: '',\n            memberType: '0',\n            btnDisabled: false,\n            showRelation: ''\n        }\n    }\n    changePhone = (value: any) => {\n        let phones = /^1\\d{10}$/;\n        this.setState({\n            phone: value,\n        },() => {\n            if (!phones.test(value)) {\n                this.setState({\n                    hasError: true,\n                });\n            } else {\n                this.setState({\n                    hasError: false,\n                });\n            }\n        }); \n    }\n    changeMust = (param: any, str: string) => {\n        //必选为空的判断\n        if (param.replace(/\\s/g, '').length === 0) {\n            Toast.info(`${str}不能为空`, 2);\n            return false\n        } else {\n            return true\n        }\n        \n    }\n    onErrorClick = () => {\n        //手机号验证设置\n        if (this.state.hasError) {\n            Toast.info('请输入11位有效手机号');\n        }\n    }\n    checkEmail = () => {\n        const { mail } = this.state;\n        var reg = /^([a-zA-Z]|[0-9]|\\.)(\\w|\\-|\\.)+@[a-zA-Z0-9]/;\n        if (!reg.test(mail)) {\n            Toast.fail('请输入正确的邮箱',2)\n            this.setState({btnDisabled: false})\n            return false\n        } else {\n            return true\n        }\n    }\n    submitEdit = () => {\n        this.setState({btnDisabled: true})\n        let { company, name, phone, work, mail, relation, company_id, staff_id, memberType, hasError } = this.state;\n        if (this.changeMust(company, '公司') && this.changeMust(name, '姓名') && this.changeMust(phone,'手机号') && this.checkEmail() && !hasError ){\n            //发送数据\n            let params = {\n                company_id,\n                company,\n                cellphone: phone,\n                email: mail,\n                nickname: name,\n                position: work,\n                relation: memberType === '1' ? '0' : relation,\n                staff_id: staff_id\n            };\n            getstaffOperation(params).then((data) => {\n                this.setState({btnDisabled: false})\n                if (!data.status) {\n                    Toast.info('操作成功');\n                    this.props.history.go(-1)\n                } else {\n                    Toast.fail(data[\"message\"],2);\n                }\n            })\n        } else {\n            this.setState({btnDisabled: false})\n        }\n\n    }\n    companyInit = () => {\n        //选择公司操作\n        getCompanyList({}).then((data) => {\n            if (!data.status) {\n                this.setState({\n                    companyList: [...data.data]\n                })\n            }\n        })\n    }\n    changeCompany = (e) => {\n        this.setState({\n            company: e\n        })\n    }\n    //select更换公司\n    changeSelectCompany = (e) => {\n        let { companyList } = this.state;\n        e.persist()\n        this.setState({\n            company_id: e.target.value,\n        })\n        companyList.map(el => {\n            if (el.id === Number(e.target.value)) {\n                this.setState({\n                    company: el.name\n                })\n            }\n        })\n    }\n    checkFromSource = () => {\n        //获取初始数据\n        let search = this.props.location.search;\n        let data = qs.parse(search.substring(1));\n        this.setState({\n            company: data.company,\n            name: data.name,\n            phone: data.phone,\n            work: data.work,\n            mail: data.mail,\n            courseId: data.courseId,\n            company_id: data.company_id,\n            staff_id: data.staff_id || '',\n            relation: data.relation || '',\n            memberType: data.memberType,\n            showRelation: data.showRelation\n        })\n    }\n    //选择公司\n    // checkComItem = (id, name) => {\n    //     this.setState({\n    //         company: name,\n    //         company_id: id,\n    //         companyList: []\n    //     })\n    // }\n    componentDidMount() {\n        document.title = '人员信息';\n        this.checkFromSource()\n        this.companyInit()\n    };\n    render() {\n        const { company, name, phone, work, mail, companyList, relation, company_id, btnDisabled, showRelation } = this.state;\n        return (\n            <div className=\"edit\">\n                 {\n                    companyList.length !== 0 ? //存在公司选择\n                        <div className=\"input-item clearfix\">\n                            <span className=\"relation\">*公司</span>\n                            <select\n                                value={company_id}\n                                onChange={this.changeSelectCompany}\n                            >   \n                                <option value=\"\"  selected disabled style={{display: \"none\"}}>请选择公司</option>\n                                {companyList.length > 0 &&\n                                    companyList.map((item, i) => {\n                                        return (\n                                            <option key={i} value={item.id}>\n                                                {item.name}\n                                            </option>\n                                        );\n                                    })}\n                            </select>\n                        </div>\n\n                        :\n                        <InputItem\n                            placeholder=\"请选择公司\"\n                            className=\"input-item\"\n                            value={company}\n                            onChange={this.changeCompany}\n                        >*公司</InputItem>\n                }\n\n                <InputItem\n                    clear\n                    placeholder=\"请输入姓名\"\n                    className=\"input-item\"\n                    value={name}\n                    onChange={(e) => { this.setState({ name: e }) }}\n                >*姓名</InputItem>\n\n                <InputItem\n                    clear\n                    placeholder=\"请输入手机号\"\n                    className=\"input-item\"\n                    value={phone}\n                    onChange={this.changePhone}\n                    error={this.state.hasError}\n                    onErrorClick={this.onErrorClick}\n                >*手机</InputItem>\n                {\n                    showRelation === '1' ?\n                    <div className=\"input-item clearfix\">\n                        <span className=\"relation\">*关系</span>\n                        <select onChange={(e) => { this.setState({ relation: e.target.value }) }} value={relation || '1'}>\n                            <option value=\"\">请选择与您的关系</option>\n                            <option value=\"1\">同事</option>\n                            <option value=\"2\">亲属</option>\n                            <option value=\"3\">朋友</option>\n                        </select>\n                    </div>\n                    :\n                    <div></div>\n                }\n                <InputItem\n                    clear\n                    placeholder=\"请输入邮箱\"\n                    className=\"input-item\"\n                    value={mail}\n                    onChange={(e: string) => { this.setState({ mail: e }) }}\n                >*邮箱</InputItem>\n                \n                <InputItem\n                    clear\n                    placeholder=\"请输入所在职位\"\n                    className=\"input-item\"\n                    value={work}\n                    onChange={(e) => { this.setState({ work: e }) }}\n                >职位</InputItem>\n\n\n                \n                \n                <BottomBtn btnDisabled={btnDisabled} click={this.submitEdit} title=\"确定\"/>\n                {/* <CompanySearch course={companyList} checkCompany={this.checkComItem} /> */}\n            </div>\n        );\n    }\n\n}\n","import axios from 'axios';\nimport { getEnv, LinkHost } from '../util/config';\nlet siteEnv = getEnv();\nlet data = localStorage.getItem('openid') || '{}';\nlet openid = JSON.parse(data).data || '';\n\naxios.defaults.baseURL = `//${siteEnv}${LinkHost}`;\naxios.defaults.headers.post['Content-Type'] = \"application/json\";\naxios.interceptors.request.use(function (config) {\n    //请求头加上openid\n    config.headers.openid = openid;\n\n\n    // Do something before request is sent\n    return Promise.resolve(config);\n}, function (error) {\n\n\n    // Do something with request error\n    return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n\n    // Do something with response data\n    return Promise.resolve(response.data)\n}, function (error) {\n\n    // Do something with response error\n    return Promise.reject(error);\n});\n\n\nexport default class eduAxios {\n    request(options: any) {\n        return axios.request(options);\n    }\n    get(url: string, options = {},flag: any) {\n        let hasOpenId = flag ? {} : { openid:openid };\n        return this.request({\n            url,\n            params: {\n                ...options,\n                ...hasOpenId\n            },\n            \n        })\n    }\n    post(url: string, data: any, options:any = {}) {\n        if( options.openid ){\n            data.openid = openid;\n        }\n        return this.request({\n            method: 'post',\n            url,\n            data,\n            ...options,\n        }); \n        \n    }\n}\nconst instanceAxios = new eduAxios();\nexport const request = instanceAxios.request.bind(instanceAxios);\nexport const get = instanceAxios.get.bind(instanceAxios);\nexport const post = instanceAxios.post.bind(instanceAxios);"],"sourceRoot":""}