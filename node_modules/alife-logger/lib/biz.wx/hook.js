module.exports = function(e) {
    var t = require("../util"), i = null, a = {};
    return t.ext(e.prototype, {
        addHook: function() {
            return this.isHookInstantiated ? this : (function() {
                var e = this;
                if ("undefined" != typeof wx && wx && "function" == typeof wx.request) {
                    i = wx;
                    var s = {
                        request: function(i) {
                            var a = new Date().getTime();
                            if (i && "object" == typeof i && i[0]) {
                                var s, n, o = i[0], r = t.cutUrlSearch(o.url), c = o.success, l = o.fail, u = o && o.header;
                                u && "object" == typeof u || (u = {});
                                var f = {};
                                if (e.getConfig("enableLinkTrace")) {
                                    var d = u["EagleEye-pAppName"];
                                    if (s = u["EagleEye-TraceID"], n = u["EagleEye-SessionID"], s || (s = e.getTraceId()["EagleEye-TraceID"], 
                                    f["EagleEye-TraceID"] = s), n || (n = e.getSessionId()["EagleEye-SessionID"], f["EagleEye-SessionID"] = n), 
                                    !d) {
                                        var p = e.getConfig("pid");
                                        f["EagleEye-pAppName"] = p;
                                    }
                                }
                                o.success = function() {
                                    var o = new Date().getTime();
                                    if (t.checkAPI(r, !0)) {
                                        var l = arguments && arguments[0] && arguments[0].statusCode || 200;
                                        e.api({
                                            api: i[0].url,
                                            success: !0,
                                            time: o - a,
                                            code: l,
                                            begin: a,
                                            traceId: s,
                                            sid: n
                                        });
                                    }
                                    c && c.apply(e, [].slice.call(arguments));
                                }, o.fail = function() {
                                    var o = new Date().getTime();
                                    if (t.checkAPI(r, !0)) {
                                        var c = "";
                                        arguments && arguments[0] && "object" == typeof arguments[0] && (c = (c = JSON.stringify(arguments[0])).substring(0, 1e3));
                                        var u = arguments && arguments[0] && arguments[0].statusCode || "FAILED";
                                        e.api({
                                            api: i[0].url,
                                            success: !1,
                                            time: o - a,
                                            code: u,
                                            msg: c,
                                            begin: a,
                                            traceId: s,
                                            sid: n
                                        });
                                    }
                                    l && l.apply(e, [].slice.call(arguments));
                                }, o.header = t.ext({}, u, f);
                            }
                        }
                    };
                    for (var n in wx) if (s[n]) {
                        var o = n.toString();
                        a[o] = function() {
                            return s[o](arguments), i[o].apply(i, [].slice.call(arguments));
                        };
                    } else a[n] = i[n];
                    wx = a;
                }
            }.call(this), this.isHookInstantiated = !0, this);
        },
        removeHook: function() {
            return this.isHookInstantiated ? (function() {
                "undefined" != typeof wx && wx && i && (wx = i, i = null);
            }.call(this), this.isHookInstantiated = !1, this) : this;
        },
        initHook: function() {
            return this.hasInitHook ? this : (this.getConfig("disableHook") || this.addHook(), 
            this.hasInitHook = !0, this);
        }
    }), e;
};