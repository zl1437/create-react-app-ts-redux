{"version":3,"sources":["components/btn/bottomBtn.tsx","api/staff.ts","container/normalMember.tsx","util/axios.ts"],"names":["BottomBtn","props","_this","Object","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","_this$props","title","btnDisabled","react__WEBPACK_IMPORTED_MODULE_6__","className","antd_mobile_es_button__WEBPACK_IMPORTED_MODULE_0__","type","disabled","onClick","click","React","__webpack_require__","d","__webpack_exports__","getStaffList","getstaffOperation","getCompanyList","staffDel","_util_axios__WEBPACK_IMPORTED_MODULE_0__","params","get","post","openid","Hello","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","changePhone","value","test","setState","hasError","phone","changeMust","param","str","replace","length","antd_mobile_es_toast__WEBPACK_IMPORTED_MODULE_2__","info","concat","onErrorClick","checkEmail","mail","fail","submitEdit","_this$state","company","name","work","relation","company_id","cellphone","email","nickname","position","is_check","then","data","courseId","status","staff_ids","history","push","companyInit","isLoading","companyList","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","changeCompany","e","checkFromSource","search","location","qs","parse","substring","showRelation","changeSelectCompany","persist","target","map","el","id","Number","document","_this2","_this$state2","console","log","react__WEBPACK_IMPORTED_MODULE_8__","antd_mobile_es_input_item__WEBPACK_IMPORTED_MODULE_0__","placeholder","onChange","selected","style","display","item","i","key","clear","error","_components_btn_bottomBtn__WEBPACK_IMPORTED_MODULE_10__","siteEnv","getEnv","localStorage","getItem","JSON","axios","defaults","baseURL","LinkHost","headers","interceptors","request","use","config","Promise","resolve","reject","response","instanceAxios","options","url","arguments","undefined","hasOpenId","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","bind"],"mappings":"sJAWMA,sBACF,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACpBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFOP,wEAKf,IAAAQ,EAC0BL,KAAKJ,MAA5BU,EADHD,EACGC,MAAOC,EADVF,EACUE,YACf,OACIC,EAAA,qBAAKC,UAAU,cACXD,EAAA,cAAAE,EAAA,GAAQC,KAAK,UAAUC,SAAUL,EAAaE,UAAU,MAAMI,QAASb,KAAKJ,MAAMkB,OAAQR,WAVlFS,cAeTpB,8DCzBfqB,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAA,IAAAC,EAAAP,EAAA,IAGaG,EAAe,SAACK,GAAD,OAAiBC,YAAI,mBAAoBD,GAAO,IAI/DJ,EAAoB,SAACI,GAAD,OAAiBE,YAAK,wBAAyBF,EAAO,CAACG,QAAQ,KAGnFN,EAAiB,SAACG,GAAD,OAAiBE,YAAK,uBAAwBF,EAAO,CAACG,QAAQ,KAG/EL,EAAW,SAACE,GAAD,OAAiBC,YAAI,kBAAmBD,GAAO,wNCgBlDI,sBACjB,SAAAA,EAAYhC,GAAY,IAAAC,EAAA,OAAAC,OAAA+B,EAAA,EAAA/B,CAAAE,KAAA4B,IACpB/B,EAAAC,OAAAgC,EAAA,EAAAhC,CAAAE,KAAAF,OAAAiC,EAAA,EAAAjC,CAAA8B,GAAAzB,KAAAH,KAAMJ,KAiBVoC,YAAc,SAACC,GACE,YACDC,KAAKD,GAKbpC,EAAKsC,SAAS,CACVC,UAAU,IALdvC,EAAKsC,SAAS,CACVC,UAAU,IAOlBvC,EAAKsC,SAAS,CACVE,MAAOJ,KA9BSpC,EAiCxByC,WAAa,SAACC,EAAYC,GAEtB,OAAwC,IAApCD,EAAME,QAAQ,MAAO,IAAIC,SACzBC,EAAA,EAAMC,KAAN,GAAAC,OAAcL,EAAd,4BAAyB,IAClB,IArCS3C,EAyCxBiD,aAAe,WAEPjD,EAAKO,MAAMgC,UACXO,EAAA,EAAMC,KAAK,6DA5CK/C,EA+CxBkD,WAAa,WAAM,IACPC,EAASnD,EAAKO,MAAd4C,KAER,QADU,8CACDd,KAAKc,KACVL,EAAA,EAAMM,KAAK,mDAAW,GACtBpD,EAAKsC,SAAS,CAAC5B,aAAa,KACrB,IArDSV,EA0DxBqD,WAAa,WACTrD,EAAKsC,SAAS,CAAE5B,aAAa,IADd,IAAA4C,EAE4DtD,EAAKO,MAA1EgD,EAFSD,EAETC,QAASC,EAFAF,EAEAE,KAAMhB,EAFNc,EAEMd,MAAOiB,EAFbH,EAEaG,KAAMN,EAFnBG,EAEmBH,KAAMO,EAFzBJ,EAEyBI,SAAUC,EAFnCL,EAEmCK,WAAYpB,EAF/Ce,EAE+Cf,SAC9D,GAAIvC,EAAKyC,WAAWc,EAAS,iBAASvD,EAAKyC,WAAWe,EAAM,iBAASxD,EAAKyC,WAAWD,EAAM,uBAAUxC,EAAKkD,eAAiBX,EAAU,CAEjI,IAAIZ,EAAS,CACTgC,aACAJ,UACAK,UAAWpB,EACXqB,MAAOV,EACPW,SAAUN,EACVO,SAAUN,EACVC,SAAUA,EACVM,SAAU,GAEdzC,YAAkBI,GAAQsC,KAAK,SAACC,GAAS,IAC7BC,EAAanE,EAAKO,MAAlB4D,SAER,GADAnE,EAAKsC,SAAS,CAAE5B,aAAa,IACxBwD,EAAKE,OAKNtB,EAAA,EAAMM,KAAKc,EAAI,QAAY,OALb,CACd,IAAIG,EAAYH,EAAKA,KAErBlE,EAAKD,MAAMuE,QAAQC,KAAnB,qBAAAvB,OAA6CqB,EAA7C,cAAArB,OAAmEmB,EAAnE,0BAMRnE,EAAKsC,SAAS,CAAE5B,aAAa,KArFbV,EAyFxBwE,YAAc,WACVxE,EAAKsC,SAAS,CAACmC,WAAW,IAE1BjD,YAAe,IAAIyC,KAAK,SAACC,GACrBlE,EAAKsC,SAAS,CAACmC,WAAW,IACrBP,EAAKE,QACNpE,EAAKsC,SAAS,CACVoC,YAAYzE,OAAA0E,EAAA,EAAA1E,CAAKiE,EAAKA,WAhGdlE,EAqGxB4E,cAAgB,SAACC,GACb7E,EAAKsC,SAAS,CACViB,QAASsB,KAvGO7E,EA0GxB8E,gBAAkB,WAEd,IAAIC,EAAS/E,EAAKD,MAAMiF,SAASD,OAC7Bb,EAAOe,IAAGC,MAAMH,EAAOI,UAAU,IACrCnF,EAAKsC,SAAS,CACV6B,SAAUD,EAAKC,SACfiB,aAAclB,EAAKkB,gBAhHHpF,EAoHxBqF,oBAAsB,SAACR,GAAM,IACnBH,EAAgB1E,EAAKO,MAArBmE,YACNG,EAAES,UACFtF,EAAKsC,SAAS,CACVqB,WAAYkB,EAAEU,OAAOnD,QAEzBsC,EAAYc,IAAI,SAAAC,GACRA,EAAGC,KAAOC,OAAOd,EAAEU,OAAOnD,QAC1BpC,EAAKsC,SAAS,CACViB,QAASkC,EAAGjC,UA3HxBxD,EAAKO,MAAQ,CACTgD,QAAS,GACTC,KAAM,GACNhB,MAAO,GACPiB,KAAM,GACNN,KAAM,GACNZ,UAAU,EACVmB,SAAU,GACVgB,YAAa,GACbf,WAAY,GACZQ,SAAU,GACVzD,aAAa,EACb0E,aAAc,GACdX,WAAW,GAfKzE,mFA2IpB4F,SAASnF,MAAQ,2BACjBN,KAAK2E,kBACL3E,KAAKqE,+CAEA,IAAAqB,EAAA1F,KAAA2F,EACiH3F,KAAKI,MAAnHgD,EADHuC,EACGvC,QAASC,EADZsC,EACYtC,KAAMhB,EADlBsD,EACkBtD,MAAOiC,EADzBqB,EACyBrB,UAAWhB,EADpCqC,EACoCrC,KAAMN,EAD1C2C,EAC0C3C,KAAMuB,EADhDoB,EACgDpB,YAAahB,EAD7DoC,EAC6DpC,SAAUhD,EADvEoF,EACuEpF,YAAa0E,EADpFU,EACoFV,aAAczB,EADlGmC,EACkGnC,WAEvG,OADAoC,QAAQC,IAAIrC,GAERsC,EAAA,qBAAKrF,UAAU,QAEgB,IAAvB8D,EAAY7B,QAAiB4B,EAoBzBwB,EAAA,cAAAC,EAAA,GACIC,YAAY,iCACZvF,UAAU,aACVwB,MAAOmB,EACP6C,SAAUjG,KAAKyE,eAJnB,iBAnBAqB,EAAA,qBAAKrF,UAAU,uBACXqF,EAAA,sBAAMrF,UAAU,YAAhB,iBACAqF,EAAA,wBACI7D,MAAOuB,EACPyC,SAAUjG,KAAKkF,qBAEfY,EAAA,wBAAQ7D,MAAM,GAAIiE,UAAQ,EAACtF,UAAQ,EAACuF,MAAO,CAACC,QAAS,SAArD,kCACC7B,EAAY7B,OAAS,GAClB6B,EAAYc,IAAI,SAACgB,EAAMC,GACnB,OACIR,EAAA,wBAAQS,IAAKD,EAAGrE,MAAOoE,EAAKd,IACvBc,EAAKhD,UAetCyC,EAAA,cAAAC,EAAA,GACIS,OAAK,EACLR,YAAY,iCACZvF,UAAU,aACVwB,MAAOoB,EACP4C,SAAU,SAACvB,GAAQgB,EAAKvD,SAAS,CAAEkB,KAAMqB,MAL7C,iBAQAoB,EAAA,cAAAC,EAAA,GACIS,OAAK,EACLR,YAAY,uCACZvF,UAAU,aACVwB,MAAOI,EACP4D,SAAUjG,KAAKgC,YACfyE,MAAOzG,KAAKI,MAAMgC,SAClBU,aAAc9C,KAAK8C,cAPvB,iBAWqB,MAAjBmC,EACIa,EAAA,qBAAKrF,UAAU,uBACXqF,EAAA,sBAAMrF,UAAU,YAAhB,iBACAqF,EAAA,wBAAQG,SAAU,SAACvB,GAAQgB,EAAKvD,SAAS,CAAEoB,SAAUmB,EAAEU,OAAOnD,SAAYA,MAAOsB,GAAY,KACzFuC,EAAA,wBAAQ7D,MAAM,IAAd,oDACA6D,EAAA,wBAAQ7D,MAAM,KAAd,gBACA6D,EAAA,wBAAQ7D,MAAM,KAAd,gBACA6D,EAAA,wBAAQ7D,MAAM,KAAd,kBAIR6D,EAAA,0BAGRA,EAAA,cAAAC,EAAA,GACIS,OAAK,EACLR,YAAY,iCACZvF,UAAU,aACVwB,MAAOe,EACPiD,SAAU,SAACvB,GAAgBgB,EAAKvD,SAAS,CAAEa,KAAM0B,MALrD,iBAQAoB,EAAA,cAAAC,EAAA,GACIS,OAAK,EACLR,YAAY,6CACZvF,UAAU,aACVwB,MAAOqB,EACP2C,SAAU,SAACvB,GAAQgB,EAAKvD,SAAS,CAAEmB,KAAMoB,MAL7C,gBAWAoB,EAAA,cAACY,EAAA,EAAD,CAAWnG,YAAaA,EAAaO,MAAOd,KAAKkD,WAAY5C,MAAM,yBArOhDS,oKC5B/B4F,EAAUC,cACV7C,EAAO8C,aAAaC,QAAQ,WAAa,KACzCnF,EAASoF,KAAKhC,MAAMhB,GAAMA,MAAQ,GAEtCiD,IAAMC,SAASC,QAAf,KAAArE,OAA8B8D,GAA9B9D,OAAwCsE,KACxCH,IAAMC,SAASG,QAAQ1F,KAAK,gBAAkB,mBAC9CsF,IAAMK,aAAaC,QAAQC,IAAI,SAAUC,GAMrC,OAJAA,EAAOJ,QAAQzF,OAASA,EAIjB8F,QAAQC,QAAQF,IACxB,SAAUf,GAIT,OAAOgB,QAAQE,OAAOlB,KAE1BO,IAAMK,aAAaO,SAASL,IAAI,SAAUK,GAGtC,OAAOH,QAAQC,QAAQE,EAAS7D,OACjC,SAAU0C,GAGT,OAAOgB,QAAQE,OAAOlB,SAgCpBoB,EAAgB,oGA3BVC,GACJ,OAAOd,IAAMM,QAAQQ,+BAErBC,GAAqC,IAAxBD,EAAwBE,UAAAtF,OAAA,QAAAuF,IAAAD,UAAA,GAAAA,UAAA,GAAd,GACnBE,GADiCF,UAAAtF,OAAA,EAAAsF,UAAA,QAAAC,GACd,GAAK,CAAEtG,OAAOA,GACrC,OAAO3B,KAAKsH,QAAQ,CAChBS,MACAvG,OAAO1B,OAAAqI,EAAA,EAAArI,CAAA,GACAgI,EACAI,kCAKVH,EAAahE,GAA6B,IAAlB+D,EAAkBE,UAAAtF,OAAA,QAAAuF,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAIvC,OAHIF,EAAQnG,SACRoC,EAAKpC,OAASA,GAEX3B,KAAKsH,QAALxH,OAAAqI,EAAA,EAAArI,CAAA,CACHsI,OAAQ,OACRL,MACAhE,QACG+D,cAOFrG,GADUoG,EAAcP,QAAQe,KAAKR,GAC/BA,EAAcpG,IAAI4G,KAAKR,IAC7BnG,EAAOmG,EAAcnG,KAAK2G,KAAKR","file":"static/js/38.b188f3d5.chunk.js","sourcesContent":["import * as React from \"react\";\n\nimport { Button } from 'antd-mobile'\nimport './btn.less'\ninterface ISprops {\n    [propsName: string]: any\n}\ninterface IState {\n    [statesName: string]: any\n}\n\nclass BottomBtn extends React.Component<ISprops, IState>{\n    constructor(props: any) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() {\n        const { title, btnDisabled } = this.props;\n        return (\n            <div className=\"bottom-btn\">\n                <Button type=\"primary\" disabled={btnDisabled} className=\"btn\" onClick={this.props.click}>{title}</Button>\n            </div>\n        )\n    }\n}\nexport default BottomBtn","\nimport { get, post } from '../util/axios';\n\n\nexport const getStaffList = (params: any) => get('/staff/staffList', params,false);//获取员工信息\n\n\n\nexport const getstaffOperation = (params: any) => post('/staff/staffOperation', params,{openid: true});//员工新增\n\n\nexport const getCompanyList = (params: any) => post('/Home/getCompanyList', params,{openid: true});//公司列表\n\n\nexport const staffDel = (params: any) => get('/staff/staffDel', params,false);//删除员工","//react 基础组件加载\nimport * as React from \"react\";\n\nimport { InputItem, Button, Toast } from 'antd-mobile'\nimport qs from 'qs'\nimport BottomBtn from '../components/btn/bottomBtn'\n\n\nimport { getCompanyList, getstaffOperation } from '../api/staff'\nimport '../assets/less/edit.less'\n\n\ninterface ISprops {\n    [propName: string]: any;\n}\ninterface IState {\n    company: string,\n    name: string,\n    phone: string,\n    work: string,\n    mail: string,\n    hasError: boolean,\n    relation: any,\n    companyList: any,\n    company_id: any,\n    courseId: any,\n    btnDisabled: any,\n    showRelation: any,\n    isLoading: any\n}\nexport default class Hello extends React.Component<ISprops, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            company: '',\n            name: '',\n            phone: '',\n            work: '',\n            mail: '',\n            hasError: false,\n            relation: '',\n            companyList: [],\n            company_id: '',\n            courseId: '',\n            btnDisabled: false,\n            showRelation: '',\n            isLoading: false\n        }\n    }\n    changePhone = (value: any) => {\n        let phones = /^1\\d{10}$/;\n        if (!phones.test(value)) {\n            this.setState({\n                hasError: true,\n            });\n        } else {\n            this.setState({\n                hasError: false,\n            });\n        }\n        this.setState({\n            phone: value,\n        });\n    }\n    changeMust = (param: any, str: string) => {\n        //必选为空的判断\n        if (param.replace(/\\s/g, '').length === 0) {\n            Toast.info(`${str}不能为空`, 2);\n            return false\n        }\n        return true\n    }\n    onErrorClick = () => {\n        //手机号验证设置\n        if (this.state.hasError) {\n            Toast.info('请输入11位有效手机号');\n        }\n    }\n    checkEmail = () => {\n        const { mail } = this.state;\n        var reg = /^([a-zA-Z]|[0-9]|\\.)(\\w|\\-|\\.)+@[a-zA-Z0-9]/;\n        if (!reg.test(mail)) {\n            Toast.fail('请输入正确的邮箱',2)\n            this.setState({btnDisabled: false})\n            return false\n        } else {\n            return true\n        }\n    }\n    submitEdit = () => {\n        this.setState({ btnDisabled: true })\n        let { company, name, phone, work, mail, relation, company_id, hasError } = this.state;\n        if (this.changeMust(company, '公司') && this.changeMust(name, '姓名') && this.changeMust(phone,\"手机号\") && this.checkEmail() && !hasError) {\n            //发送数据\n            let params = {\n                company_id,\n                company,\n                cellphone: phone,\n                email: mail,\n                nickname: name,\n                position: work,\n                relation: relation,\n                is_check: 1\n            };\n            getstaffOperation(params).then((data) => {\n                const { courseId } = this.state;\n                this.setState({ btnDisabled: false })\n                if (!data.status) {\n                    let staff_ids = data.data;\n                    // Toast.info('操作成功');\n                    this.props.history.push(`/payFor?staff_ids=${staff_ids}&courseId=${courseId}&member_num=1`)\n                } else {\n                    Toast.fail(data[\"message\"],2);\n                }\n            })\n        } else {\n            this.setState({ btnDisabled: false })\n        }\n\n    }\n    companyInit = () => {\n        this.setState({isLoading: true})\n        //选择公司操作\n        getCompanyList({}).then((data) => {\n            this.setState({isLoading: false})\n            if (!data.status) {\n                this.setState({\n                    companyList: [...data.data]\n                })\n            }\n        })\n    }\n    changeCompany = (e) => {\n        this.setState({\n            company: e\n        })\n    }\n    checkFromSource = () => {\n        //获取初始数据\n        let search = this.props.location.search;\n        let data = qs.parse(search.substring(1));\n        this.setState({\n            courseId: data.courseId,\n            showRelation: data.showRelation\n        })\n    }\n    //select更换公司\n    changeSelectCompany = (e) => {\n        let { companyList } = this.state;\n        e.persist()\n        this.setState({\n            company_id: e.target.value,\n        })\n        companyList.map(el => {\n            if (el.id === Number(e.target.value)) {\n                this.setState({\n                    company: el.name\n                })\n            }\n        })\n    }\n    //选择公司\n    // checkComItem = (id, name) => {\n    //     this.setState({\n    //         company: name,\n    //         company_id: id,\n    //         companyList: []\n    //     })\n    // }\n    componentDidMount() {\n        document.title = '人员信息';\n        this.checkFromSource()\n        this.companyInit()\n    };\n    render() {\n        const { company, name, phone, isLoading, work, mail, companyList, relation, btnDisabled, showRelation, company_id } = this.state;\n        console.log(company_id)\n        return (\n            <div className=\"edit\">\n                {\n                    companyList.length !== 0 && !isLoading ? //存在公司选择\n                        <div className=\"input-item clearfix\">\n                            <span className=\"relation\">*公司</span>\n                            <select\n                                value={company_id}\n                                onChange={this.changeSelectCompany}\n                            >   \n                                <option value=\"\"  selected disabled style={{display: \"none\"}}>请选择公司</option>\n                                {companyList.length > 0 &&\n                                    companyList.map((item, i) => {\n                                        return (\n                                            <option key={i} value={item.id}>\n                                                {item.name}\n                                            </option>\n                                        );\n                                    })}\n                            </select>\n                        </div>\n\n                        :\n                        <InputItem\n                            placeholder=\"请选择公司\"\n                            className=\"input-item\"\n                            value={company}\n                            onChange={this.changeCompany}\n                        >*公司</InputItem>\n                }\n                <InputItem\n                    clear\n                    placeholder=\"请输入姓名\"\n                    className=\"input-item\"\n                    value={name}\n                    onChange={(e) => { this.setState({ name: e }) }}\n                >*姓名</InputItem>\n\n                <InputItem\n                    clear\n                    placeholder=\"请输入手机号\"\n                    className=\"input-item\"\n                    value={phone}\n                    onChange={this.changePhone}\n                    error={this.state.hasError}\n                    onErrorClick={this.onErrorClick}\n                >*手机</InputItem>\n\n                {\n                    showRelation === '1' ?\n                        <div className=\"input-item clearfix\">\n                            <span className=\"relation\">*关系</span>\n                            <select onChange={(e) => { this.setState({ relation: e.target.value }) }} value={relation || '1'}>\n                                <option value=\"\">请选择与您的关系</option>\n                                <option value=\"1\">同事</option>\n                                <option value=\"2\">亲属</option>\n                                <option value=\"3\">朋友</option>\n                            </select>\n                        </div>\n                        :\n                        <div></div>\n                }\n\n                <InputItem\n                    clear\n                    placeholder=\"请输入邮箱\"\n                    className=\"input-item\"\n                    value={mail}\n                    onChange={(e: string) => { this.setState({ mail: e }) }}\n                >*邮箱</InputItem>\n\n                <InputItem\n                    clear\n                    placeholder=\"请输入所在职位\"\n                    className=\"input-item\"\n                    value={work}\n                    onChange={(e) => { this.setState({ work: e }) }}\n                >职位</InputItem>\n\n\n                \n\n                <BottomBtn btnDisabled={btnDisabled} click={this.submitEdit} title=\"提交\" />\n                {/* <CompanySearch course={companyList} checkCompany={this.checkComItem} /> */}\n            </div>\n        );\n    }\n\n}\n","import axios from 'axios';\nimport { getEnv, LinkHost } from '../util/config';\nlet siteEnv = getEnv();\nlet data = localStorage.getItem('openid') || '{}';\nlet openid = JSON.parse(data).data || '';\n\naxios.defaults.baseURL = `//${siteEnv}${LinkHost}`;\naxios.defaults.headers.post['Content-Type'] = \"application/json\";\naxios.interceptors.request.use(function (config) {\n    //请求头加上openid\n    config.headers.openid = openid;\n\n\n    // Do something before request is sent\n    return Promise.resolve(config);\n}, function (error) {\n\n\n    // Do something with request error\n    return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n\n    // Do something with response data\n    return Promise.resolve(response.data)\n}, function (error) {\n\n    // Do something with response error\n    return Promise.reject(error);\n});\n\n\nexport default class eduAxios {\n    request(options: any) {\n        return axios.request(options);\n    }\n    get(url: string, options = {},flag: any) {\n        let hasOpenId = flag ? {} : { openid:openid };\n        return this.request({\n            url,\n            params: {\n                ...options,\n                ...hasOpenId\n            },\n            \n        })\n    }\n    post(url: string, data: any, options:any = {}) {\n        if( options.openid ){\n            data.openid = openid;\n        }\n        return this.request({\n            method: 'post',\n            url,\n            data,\n            ...options,\n        }); \n        \n    }\n}\nconst instanceAxios = new eduAxios();\nexport const request = instanceAxios.request.bind(instanceAxios);\nexport const get = instanceAxios.get.bind(instanceAxios);\nexport const post = instanceAxios.post.bind(instanceAxios);"],"sourceRoot":""}