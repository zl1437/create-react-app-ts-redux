{"ast":null,"code":"import _defineProperty from \"/Users/zhenglei/Desktop/zhenglei/create-react-app-ts-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _Toast from \"antd-mobile/es/toast\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport { getEnv, LinkHost } from '../util/config';\nlet siteEnv = getEnv();\naxios.defaults.baseURL = \"//\".concat(siteEnv).concat(LinkHost);\naxios.defaults.headers.post['Content-Type'] = \"application/json\";\naxios.interceptors.request.use(function (config) {\n  let data = localStorage.getItem('openid') || '{}';\n  let openid = JSON.parse(data).data || '';\n  config.headers.openid = openid;\n  return Promise.resolve(config);\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  if (response.status === 200) {\n    //接口请求成功\n    let href = window.location.href;\n    let str = '/sign/index';\n\n    if (response.data && href.indexOf(str) === -1 && response.data.status === 2001) {\n      //请求结果未关注公众号\n      window.location.href = \"http://\".concat(siteEnv, \"vip.goldenfinance.com.cn/attention\");\n    }\n  }\n\n  return Promise.resolve(response.data);\n}, function (error) {\n  //输出接口异常\n  _Toast.fail('网络请求出错，请刷新页面', 2);\n\n  return Promise.reject(error);\n});\nexport default class eduAxios {\n  request(options) {\n    return axios.request(options);\n  }\n\n  get(url, options = {}, flag) {\n    let data = localStorage.getItem('openid') || '{}';\n    let openid = JSON.parse(data).data || '';\n    let hasOpenId = flag ? {} : {\n      openid: openid\n    };\n    return this.request({\n      url,\n      params: _objectSpread({}, options, {}, hasOpenId)\n    });\n  }\n\n  post(url, data, options = {}) {\n    let data2 = localStorage.getItem('openid') || '{}';\n    let openid = JSON.parse(data2).data || '';\n\n    if (options.openid) {\n      data.openid = openid;\n    }\n\n    return this.request(_objectSpread({\n      method: 'post',\n      url,\n      data\n    }, options));\n  }\n\n}\nconst instanceAxios = new eduAxios();\nexport const request = instanceAxios.request.bind(instanceAxios);\nexport const get = instanceAxios.get.bind(instanceAxios);\nexport const post = instanceAxios.post.bind(instanceAxios);","map":{"version":3,"sources":["/Users/zhenglei/Desktop/zhenglei/create-react-app-ts-redux/src/util/axios.ts"],"names":["axios","getEnv","LinkHost","siteEnv","defaults","baseURL","headers","post","interceptors","request","use","config","data","localStorage","getItem","openid","JSON","parse","Promise","resolve","error","reject","response","status","href","window","location","str","indexOf","fail","eduAxios","options","get","url","flag","hasOpenId","params","data2","method","instanceAxios","bind"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { Toast } from 'antd-mobile'\nimport { getEnv, LinkHost } from '../util/config';\nimport { haveStorage } from '../util/config'\nlet siteEnv = getEnv();\n\n\naxios.defaults.baseURL = `//${siteEnv}${LinkHost}`;\naxios.defaults.headers.post['Content-Type'] = \"application/json\";\n\n\naxios.interceptors.request.use(function (config) {\n    let data = localStorage.getItem('openid') || '{}';\n    let openid = JSON.parse(data).data || '';\n    config.headers.openid = openid;\n    return Promise.resolve(config);\n}, function (error) {\n    return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n    if (response.status === 200) {\n        //接口请求成功\n        let href = window.location.href;\n        let str = '/sign/index'\n        if (response.data && href.indexOf(str) === -1 && response.data.status === 2001) {\n            //请求结果未关注公众号\n            window.location.href = `http://${siteEnv}vip.goldenfinance.com.cn/attention`\n        }\n    }\n    return Promise.resolve(response.data)\n}, function (error) {\n    //输出接口异常\n    Toast.fail('网络请求出错，请刷新页面',2)\n    return Promise.reject(error);\n});\n\n\n\n\nexport default class eduAxios {\n    request(options: any) {\n        return axios.request(options);\n    }\n    get(url: string, options = {},flag: any) {\n        let data = localStorage.getItem('openid') || '{}';\n        let openid = JSON.parse(data).data || '';\n        let hasOpenId = flag ? {} : { openid:openid };\n        return this.request({\n            url,\n            params: {\n                ...options,\n                ...hasOpenId\n            },\n            \n        })\n    }\n    post(url: string, data: any, options:any = {}) {\n        let data2 = localStorage.getItem('openid') || '{}';\n        let openid = JSON.parse(data2).data || '';\n        if( options.openid ){\n            data.openid = openid;\n        }\n        return this.request({\n            method: 'post',\n            url,\n            data,\n            ...options,\n        }); \n        \n    }\n}\nconst instanceAxios = new eduAxios();\nexport const request = instanceAxios.request.bind(instanceAxios);\nexport const get = instanceAxios.get.bind(instanceAxios);\nexport const post = instanceAxios.post.bind(instanceAxios);"]},"metadata":{},"sourceType":"module"}