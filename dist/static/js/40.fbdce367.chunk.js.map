{"version":3,"sources":["assets/img/logo.png","container/bind/bindPhone.tsx","util/axios.ts","api/bind.ts"],"names":["module","exports","__webpack_require__","p","BindPhone","props","_this","Object","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","handleClick","_this$state","state","hasError","phone","params","setState","discodeBtn","antd_mobile_es_toast__WEBPACK_IMPORTED_MODULE_2__","fail","sendMessage","then","data","status","info","verifyCode","htmlBtn","console","log","onErrorClick","changePhone","v","test","changeCode","getVerifyCode","timer","siv","setInterval","btnText","clearInterval","changeMust","param","str","replace","length","concat","handleBind","loading","_this$state2","hide","mcode","bindPhone","history","push","message","getUser","search","location","qs","parse","substring","getUserInfo","res","cellphone","change","localStorage","setItem","document","title","_this$state3","react__WEBPACK_IMPORTED_MODULE_8__","className","src","bg","alt","antd_mobile_es_input_item__WEBPACK_IMPORTED_MODULE_1__","placeholder","onChange","error","antd_mobile_es_button__WEBPACK_IMPORTED_MODULE_0__","type","onClick","disabled","React","siteEnv","getEnv","getItem","openid","JSON","axios","defaults","baseURL","LinkHost","headers","post","interceptors","request","use","config","Promise","resolve","reject","response","instanceAxios","options","url","arguments","undefined","hasOpenId","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","get","bind","d","__webpack_exports__","setHotSearchHits","_util_axios__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/40.fbdce367.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e7e3580f.png\";","import * as React from \"react\";\nimport { Button, InputItem, Toast } from 'antd-mobile';\nimport qs from 'qs'\n\nimport { sendMessage, bindPhone, getUserInfo } from '../../api/bind'\nimport bg from '../../assets/img/logo.png'\nimport './bind.less'\ninterface ISprops {\n    [propName: string]: any,\n}\ninterface IState {\n    phone: string,\n    hasError: boolean,\n    verifyCode: string\n    discodeBtn: boolean\n    timer: number,\n    btnText: string | number,\n    getVerifyCode: string\n\n}\n\nexport default class BindPhone extends React.Component<ISprops, IState>{\n    constructor(props: ISprops) {\n        super(props);\n        this.state = {\n            phone: '',\n            hasError: false,\n            verifyCode: '',//验证码\n            getVerifyCode: '',//获取的验证码\n            discodeBtn: false,//是否可以点击\n            timer: 60,\n            btnText: '获取验证码',\n        }\n\n    }\n    handleClick = () => {\n        const { hasError, phone } = this.state;\n        let params: object = {\n            phone\n        }\n        this.setState({discodeBtn: true})\n        if (hasError || phone === '') {\n            Toast.fail('请输入11位有效手机号',2)\n            this.setState({discodeBtn: false})\n        } else {\n            sendMessage(params).then((data) => {\n                if (!data.status) {\n                    this.setState({\n                        verifyCode: data.data,\n                    }, () => {\n                        this.htmlBtn()\n                    })\n                    console.log(data.data)\n                    Toast.info('短信发送成功', 3);\n                } else {\n                    this.setState({discodeBtn: false})\n                    Toast.info(data[\"message\"], 3)\n                }\n            })\n        }\n\n    }\n    onErrorClick = () => {\n        if (this.state.hasError) {\n            Toast.info('请输入11位有效手机号', 3);\n        }\n    }\n    changePhone = (v) => {\n        let phones = /^1\\d{10}$/;\n        if (!phones.test(v)) {\n            this.setState({\n                hasError: true,\n            });\n        } else {\n            this.setState({\n                hasError: false,\n            });\n        }\n        this.setState({\n            phone: v,\n        });\n    }\n    changeCode = (v) => {\n        this.setState({\n            getVerifyCode: v\n        })\n    }\n    htmlBtn = () => {\n        let { timer } = this.state;\n        timer = 60;\n        let siv = setInterval(() => {\n            this.setState({ timer: (--timer), btnText: timer, discodeBtn: true }, () => {\n                if (timer === 0) {\n                    clearInterval(siv);\n                    this.setState({ btnText: '重新发送', discodeBtn: false })//清除验证码\n                }\n            });\n        }, 1000);\n    }\n    changeMust = (param: any, str: string) => {\n        //必选为空的判断\n        if (param.replace(/\\s/g, '').length === 0) {\n            Toast.info(`${str}不能为空`, 2);\n            return false\n        } else {\n            return true\n        }\n        \n    }\n    handleBind = () => {\n        //绑定\n        Toast.loading('')\n        const { timer, verifyCode, getVerifyCode, phone } = this.state;\n        console.log(timer)\n        if (timer > 0 && this.changeMust(phone,\"手机号\") && this.changeMust(getVerifyCode,\"验证码\")) {\n            if (verifyCode !== getVerifyCode) {\n                Toast.hide()\n                Toast.info('请输入正确的验证码')\n                return false;\n            }\n            let params: object = {\n                phone,\n                mcode: verifyCode\n            }\n            bindPhone(params).then( (data: any) => {\n                this.setState({discodeBtn: false,})\n                Toast.hide()\n                if( data.status === 0) {\n                    //绑定成功\n                    Toast.info('绑定成功')\n                    this.props.history.push(`/`)\n                }else {\n                    Toast.info(data.message);\n                }\n            })\n        } else if (timer === 0) {\n            Toast.fail(\"验证码已过期\");\n        }\n\n    }\n    getUser = () => {\n        let search = this.props.location.search;\n        let data = qs.parse(search.substring(1));\n        Toast.loading('')\n        //获取用户信息\n        getUserInfo({}).then(res => {\n            Toast.hide()\n            if (!res.status) {\n                if (res.data.cellphone !== '' && data.change !== '1') {\n                    //已存在手机号 跳转更换手机号页面\n                    localStorage.setItem('phone',res.data.cellphone)\n                    this.props.history.push('/bind/changePhone')\n                }\n            } else {\n                Toast.fail(res[\"message\"],2)\n            }\n        })\n    }\n    componentDidMount() {\n        document.title = '账号绑定';\n        this.getUser()\n    }\n    render() {\n        const { discodeBtn, hasError, btnText } = this.state;\n        return (\n            <div className=\"bind-phone\">\n                <div className=\"logo\">\n                    <img src={bg} alt=\"\" />\n                    <p>高顿会员服务中心</p>\n                </div>\n\n                <InputItem\n                    placeholder=\"请输入您的手机号\"\n                    onChange={this.changePhone}\n                    error={hasError}\n                    onErrorClick={this.onErrorClick}\n                ></InputItem>\n\n                <div className=\"get-code clearfix\">\n                    <InputItem\n                        placeholder=\"请输入验证码\"\n                        className=\"code left\"\n                        onChange={this.changeCode}\n                    ></InputItem>\n                    <Button type=\"primary\" className=\"left btn\" onClick={this.handleClick} disabled={discodeBtn}>{btnText}</Button>\n                </div>\n\n                <Button type=\"primary\" className=\"bind-btn\" onClick={this.handleBind}>绑定</Button>\n\n                <div className=\"bind-tips\">\n                    *重要提示：请绑定您在报名时登记的手机号，若绑定号码与报名号码不一致，会导致您无法在微信中收取所报课程的相关信息。\n                </div>\n\n            </div>\n        )\n    }\n\n}\n","import axios from 'axios';\nimport { getEnv, LinkHost } from '../util/config';\nlet siteEnv = getEnv();\nlet data = localStorage.getItem('openid') || '{}';\nlet openid = JSON.parse(data).data || '';\n\naxios.defaults.baseURL = `//${siteEnv}${LinkHost}`;\naxios.defaults.headers.post['Content-Type'] = \"application/json\";\naxios.interceptors.request.use(function (config) {\n    //请求头加上openid\n    config.headers.openid = openid;\n\n\n    // Do something before request is sent\n    return Promise.resolve(config);\n}, function (error) {\n\n\n    // Do something with request error\n    return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n\n    // Do something with response data\n    return Promise.resolve(response.data)\n}, function (error) {\n\n    // Do something with response error\n    return Promise.reject(error);\n});\n\n\nexport default class eduAxios {\n    request(options: any) {\n        return axios.request(options);\n    }\n    get(url: string, options = {},flag: any) {\n        let hasOpenId = flag ? {} : { openid:openid };\n        return this.request({\n            url,\n            params: {\n                ...options,\n                ...hasOpenId\n            },\n            \n        })\n    }\n    post(url: string, data: any, options:any = {}) {\n        if( options.openid ){\n            data.openid = openid;\n        }\n        return this.request({\n            method: 'post',\n            url,\n            data,\n            ...options,\n        }); \n        \n    }\n}\nconst instanceAxios = new eduAxios();\nexport const request = instanceAxios.request.bind(instanceAxios);\nexport const get = instanceAxios.get.bind(instanceAxios);\nexport const post = instanceAxios.post.bind(instanceAxios);","\nimport { get, post } from '../util/axios';\n\n\nexport const getAuthorize = (params: any) => get('/wx/portal/authorize', params,false);//获取微信授权\n\nexport const sendMessage = (params: any) => post('/Common/sendMessage', params,{openid: true});//发送验证码\n\nexport const getWxUserInfo = (params: any) => get('/wx/portal/userInfo',params,true);//获取微信用户信息\n\nexport const bindPhone = (params: any) => post('/Common/bind',params,{openid: true});//绑定手机号\n\nexport const getUserInfo  = (params: any) => post('/User/getInfo',params,{openid: true});//获取用户信息\n\nexport const getUserInfo2  = (params: any) => post('/User/getInfo',params,{openid: false});//获取用户信息\n\n//get flag确认是否需要openid\nexport const getSignUp = (params: any) => get('/common/signUp',params,false);//获取用户信息\n\nexport const setHotSearchHits = (params: any) => get('/Home/setHotSearchHits',params,false);//设置热门搜索点击量\n\n\n\n"],"sourceRoot":""}