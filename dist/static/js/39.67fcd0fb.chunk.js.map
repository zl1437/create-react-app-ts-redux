{"version":3,"sources":["api/staff.ts","api/apply.ts","components/member.tsx","container/applyOnline.tsx","util/axios.ts"],"names":["__webpack_require__","d","__webpack_exports__","getStaffList","getstaffOperation","getCompanyList","staffDel","_util_axios__WEBPACK_IMPORTED_MODULE_0__","params","get","post","openid","getOrderSure","onlineSignUp","Member","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkRelation","data","relation","submitMail","id","state","staffId","then","res","status","toast","fail","info","window","location","reload","modal1","_this2","_this$props","applyData","index","showRelation","memberType","react","className","key","nickname","position","tag","disabled","company","cellphone","substr","real_email","concat","split","react_router_dom","to","courseId","company_id","onClick","setState","modal","visible","transparent","title","maskClosable","footer","text","onPress","React","CheckboxItem","es_checkbox","ApplyOnline","handleSubmit","disableBtn","search","qs","parse","substring","_this$state","memberArr","length","vip","member_num","staff_ids","join","course_id","history","push","staffList","checked","Arr","toConsumableArray","indexOf","map","el","splice","loading","haveRelation","hide","_this3","document","getStaff","_this4","_this$state2","style","paddingBottom","onChange","changeCheckBox","member_Member","es_button","type","siteEnv","getEnv","localStorage","getItem","JSON","axios","defaults","baseURL","LinkHost","headers","interceptors","request","use","config","Promise","resolve","error","reject","response","instanceAxios","options","url","arguments","undefined","hasOpenId","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","bind"],"mappings":"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","file":"static/js/39.67fcd0fb.chunk.js","sourcesContent":["\nimport { get, post } from '../util/axios';\n\n\nexport const getStaffList = (params: any) => get('/staff/staffList', params,false);//获取员工信息\n\n\n\nexport const getstaffOperation = (params: any) => post('/staff/staffOperation', params,{openid: true});//员工新增\n\n\nexport const getCompanyList = (params: any) => post('/Home/getCompanyList', params,{openid: true});//公司列表\n\n\nexport const staffDel = (params: any) => get('/staff/staffDel', params,false);//删除员工","\nimport { post } from '../util/axios';\n\n\nexport const getOrderSure = (params: any) => post('/OnlineApply/orderSure', params, {openid:true});//订单确认页\n\n\nexport const onlineSignUp = (params: any) => post('/OnlineApply/onlineSignUp', params, {openid:true});//在线报名","import * as React from \"react\";\nimport { Tag, Toast, Modal } from 'antd-mobile'\nimport { Link } from \"react-router-dom\"\nimport {staffDel} from '../api/staff'\n\ninterface ISprops {\n    [propName: string]: any,\n\n}\ninterface IState {\n    [statesName:string]: any\n}\n\nexport default class Member extends React.Component<ISprops, IState>{\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            modal1: false,\n            id: null\n        }\n    }\n    componentDidMount() {\n    }\n    checkRelation = (data) => {\n        switch(data.relation) {\n            case 1:\n                return '同事'\n\n            case 2:\n                return '亲属'\n\n            default:\n                return '朋友'\n\n        }\n    }\n    submitMail = () => {\n        let { id } = this.state;\n        staffDel({staffId:id}).then( res => {\n            if (!res.status) {\n                Toast.info('删除成功')\n                window.location.reload();\n            } else {\n                Toast.fail(res['message'])\n            }\n        })\n    }\n    render() {\n        const { applyData, index, showRelation, memberType } = this.props;\n        return (\n            <div className=\"apply-item-c clearfix\" key={index}>\n                <div className=\"apply-item-c-l left\">\n                    <h3>\n                        {applyData.nickname} \n                        <span>{applyData.position}</span>\n                        { showRelation === '1' ? \n                            <Tag disabled>{this.checkRelation(applyData)}</Tag>\n                            :\n                            <div></div>\n                        }\n                    </h3>\n                    <p>{applyData.company}</p>\n                    <p>{!applyData.cellphone  ? '' : applyData.cellphone.substr(0, 3) + '****' + applyData.cellphone.substr(7, 11)}</p>\n                    <p>{!applyData.real_email  ? '' : `****@${applyData.real_email.split('@')[1]}` }</p>\n                </div>\n                <div className=\"apply-item-c-r right\">\n                    <Link\n                        to={`/editMember?memberType=${this.props.memberType}&company=${applyData.company}&name=${applyData.nickname}&phone=${applyData.cellphone}&work=${applyData.position}&mail=${applyData.real_email}&courseId=${this.props.courseId}&company_id=${applyData.company_id}&staff_id=${applyData.id}&relation=${applyData.relation}`}>\n                        编辑 \n                    </Link>\n\n                    {\n                        memberType === '1' ?\n                        <span className=\"del-per\" onClick={ () => this.setState({modal1:true,id:applyData.id}) }> | 删除</span>\n                        :\n                        <div></div>\n                    }\n                </div>\n\n                <Modal\n                    visible={this.state.modal1}\n                    transparent\n                    title=\"删除员工\"\n                    maskClosable={false}\n                    footer={[{ text: '取消', onPress: () => { this.setState({modal1:false}) } },\n                            { text: '确定', onPress: () => this.submitMail() }\n                            ]\n\n                            }\n                >是否确认删除此员工</Modal>\n            </div>\n        )\n    }\n\n}\n","import * as React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Checkbox, Button, Toast } from 'antd-mobile';\nimport qs from 'qs'\n\nimport '../assets/less/applyonline.less'\nimport Member from '../components/member'\nimport { getStaffList } from '../api/staff'\nimport { onlineSignUp } from '../api/apply'\n\n\nconst CheckboxItem = Checkbox.CheckboxItem;\ninterface ISprops {\n    [propsName: string]: any\n}\ninterface IState {\n    memberArr: string[],\n    staffList: any,\n    courseId: string,\n    memberType: any,\n    disableBtn: any,\n    showRelation: any\n}\n\nexport default class ApplyOnline extends React.Component<ISprops, IState>{\n    constructor(props: ISprops) {\n        super(props);\n        this.state = {\n            memberArr: [],//提交员工信息\n            staffList: [],\n            courseId: '',\n            memberType: '0',\n            disableBtn: false,\n            showRelation: ''\n        }\n    }\n    changeCheckBox(checked: any, id: any) {\n        let Arr = [...this.state.memberArr];\n        let str = Arr.join(',');\n        if (str.indexOf(id) > -1) {\n            Arr.map((el, index) => {\n                if (el === id) {\n                    Arr.splice(index, 1)\n                }\n            })\n        } else {\n            Arr.push(id)\n        }\n        this.setState({\n            memberArr: Arr\n        })\n    }\n    handleSubmit = () => {\n        this.setState({disableBtn: true})\n        let search = this.props.location.search;\n        let data = qs.parse(search.substring(1));\n        const { memberArr, courseId } = this.state;\n        if (memberArr.length === 0) {\n            Toast.fail('请选择人员',2);\n            this.setState({disableBtn: false})\n        } else if ( data.vip && data.vip ==='1' ) {\n            //vip 报名  不需要选卡操作\n             let params = {\n                member_num: memberArr.length,\n                staff_ids: memberArr.join(','),\n                course_id: courseId\n            }\n            onlineSignUp(params).then( (data) => {\n                this.setState({disableBtn: false})\n                if(!data.status) {\n                    //成功\n                    this.props.history.push('/paySuccess')\n                }else {\n                    Toast.fail(data[\"message\"],2)\n                }\n            })\n        }else {\n            this.setState({disableBtn: false})\n            let member_num = memberArr.length;\n            let staff_ids = memberArr.join(',');\n            this.props.history.push(`/payFor?courseId=${courseId}&staff_ids=${staff_ids}&member_num=${member_num}`);\n        }\n        \n    }\n    getStaff() {\n        Toast.loading('')\n        const { showRelation } = this.state;\n        getStaffList({\n            haveRelation: showRelation === '1' ? 1 : 0,\n        }).then((data) => {\n            Toast.hide()\n            if (!data.status) {\n                this.setState({\n                    staffList: data.data || []\n                })\n            }\n        })\n    }\n    componentDidMount() {\n        document.title = '在线报名';\n        let search = this.props.location.search;\n        let data = qs.parse(search.substring(1));\n        this.setState({\n            courseId: data.courseId,\n            memberType: data.memberType,\n            showRelation: data.showRelation\n        },() => {\n            this.getStaff()\n            data.memberType !== '1' ? document.title = '在线报名' : document.title = '人员管理';\n        })\n        \n    }\n    render() {\n        const { staffList, courseId, memberType, disableBtn,showRelation } = this.state;\n        return (\n            <div className=\"apply-online\" style={{ paddingBottom: '1rem' }}>\n                <div className=\"add\">\n                    <Link to={`/editMember?memberType=${memberType}&company=&name=&phone=&work=&mail=&courseId=${courseId}&showRelation=${showRelation}`}>\n                        {memberType !== '1' ? '+新增人员' : '+新增员工'}\n                    </Link>\n                </div>\n                <div className=\"apply-online-c\">\n\n                    {\n                        (staffList || []).map((el: any, index: number) => {\n                            return (\n                                <div className=\"apply-item\" key={index}>\n                                    {\n                                        memberType !== '1' ?\n                                            <CheckboxItem key={index} onChange={(checked: any) => this.changeCheckBox(checked, el.id)}>\n                                                <Member applyData={el} showRelation={showRelation} index={index} courseId={courseId} memberType={memberType} />\n                                            </CheckboxItem>\n                                            :\n                                            <Member applyData={el} index={index} courseId={courseId} memberType={memberType} />\n                                    }\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                {\n                    memberType !== '1' ?\n                        <div className=\"apply-sign\">\n                            <Button type=\"primary\" disabled={disableBtn} className=\"apply-sign-btn\" onClick={this.handleSubmit}>确定</Button>\n                        </div>\n                        :\n                        <div></div>\n                }\n            </div>\n        )\n    }\n\n}\n","import axios from 'axios';\nimport { getEnv, LinkHost } from '../util/config';\nlet siteEnv = getEnv();\nlet data = localStorage.getItem('openid') || '{}';\nlet openid = JSON.parse(data).data || '';\n\naxios.defaults.baseURL = `//${siteEnv}${LinkHost}`;\naxios.defaults.headers.post['Content-Type'] = \"application/json\";\naxios.interceptors.request.use(function (config) {\n    //请求头加上openid\n    config.headers.openid = openid;\n\n\n    // Do something before request is sent\n    return Promise.resolve(config);\n}, function (error) {\n\n\n    // Do something with request error\n    return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n\n    // Do something with response data\n    return Promise.resolve(response.data)\n}, function (error) {\n\n    // Do something with response error\n    return Promise.reject(error);\n});\n\n\nexport default class eduAxios {\n    request(options: any) {\n        return axios.request(options);\n    }\n    get(url: string, options = {},flag: any) {\n        let hasOpenId = flag ? {} : { openid:openid };\n        return this.request({\n            url,\n            params: {\n                ...options,\n                ...hasOpenId\n            },\n            \n        })\n    }\n    post(url: string, data: any, options:any = {}) {\n        if( options.openid ){\n            data.openid = openid;\n        }\n        return this.request({\n            method: 'post',\n            url,\n            data,\n            ...options,\n        }); \n        \n    }\n}\nconst instanceAxios = new eduAxios();\nexport const request = instanceAxios.request.bind(instanceAxios);\nexport const get = instanceAxios.get.bind(instanceAxios);\nexport const post = instanceAxios.post.bind(instanceAxios);"],"sourceRoot":""}