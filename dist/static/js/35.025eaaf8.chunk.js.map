{"version":3,"sources":["components/btn/bottomBtn.tsx","api/staff.ts","api/sell.ts","components/search/companySearch.tsx","container/sell/sellChange.tsx","util/axios.ts"],"names":["BottomBtn","props","_this","Object","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","_this$props","title","btnDisabled","react__WEBPACK_IMPORTED_MODULE_6__","className","antd_mobile_es_button__WEBPACK_IMPORTED_MODULE_0__","type","disabled","onClick","click","React","__webpack_require__","d","__webpack_exports__","getStaffList","getstaffOperation","getCompanyList","staffDel","_util_axios__WEBPACK_IMPORTED_MODULE_0__","params","get","post","openid","getSellList","getSigninList","changeMember","cancelMember","CompanySearch","course","console","log","react","style","display","length","map","el","index","key","checkCompany","id","name","erp_id","Hello","classCallCheck","possibleConstructorReturn","getPrototypeOf","changePhone","value","test","setState","hasError","phone","changeMust","param","str","replace","mustFlag","toast","info","concat","onErrorClick","checkEmail","mail","fail","disableBtn","submitEdit","search","location","data","qs","parse","substring","_this$state","company","work","company_id","course_member_id","department","email","jobtitle","send_type","then","res","status","history","go","changeCompany","e","loading","companyList","toConsumableArray","hide","checkFromSource","checkComItem","document","_this2","_this$state2","input_item","placeholder","onChange","clear","error","bottomBtn","companySearch","siteEnv","getEnv","localStorage","getItem","JSON","axios","defaults","baseURL","LinkHost","headers","interceptors","request","use","config","Promise","resolve","reject","response","instanceAxios","options","url","arguments","undefined","hasOpenId","_Users_zhenglei_Desktop_zhenglei_vip_goldenfinance_com_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","bind"],"mappings":"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","file":"static/js/35.025eaaf8.chunk.js","sourcesContent":["import * as React from \"react\";\n\nimport { Button } from 'antd-mobile'\nimport './btn.less'\ninterface ISprops {\n    [propsName: string]: any\n}\ninterface IState {\n    [statesName: string]: any\n}\n\nclass BottomBtn extends React.Component<ISprops, IState>{\n    constructor(props: any) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() {\n        const { title, btnDisabled } = this.props;\n        return (\n            <div className=\"bottom-btn\">\n                <Button type=\"primary\" disabled={btnDisabled} className=\"btn\" onClick={this.props.click}>{title}</Button>\n            </div>\n        )\n    }\n}\nexport default BottomBtn","\nimport { get, post } from '../util/axios';\n\n\nexport const getStaffList = (params: any) => get('/staff/staffList', params,false);//获取员工信息\n\n\n\nexport const getstaffOperation = (params: any) => post('/staff/staffOperation', params,{openid: true});//员工新增\n\n\nexport const getCompanyList = (params: any) => post('/Home/getCompanyList', params,{openid: true});//公司列表\n\n\nexport const staffDel = (params: any) => get('/staff/staffDel', params,false);//删除员工","import { post } from '../util/axios';\n\n\nexport const getSellList = (params: any) => post('/User/getSaleCourseList', params,{openid: true});//获取销售班级列表\n\n\nexport const getSigninList= (params: any) => post('/User/getSaleSigninList', params,{openid: true});//获取销售签到列表\n\n\nexport const changeMember= (params: any) => post('/SelfHelp/changeMember', params,{openid: true});//更换学员\n\n\nexport const cancelMember= (params: any) => post('/SelfHelp/cancel', params,{openid: true});//取消报名\n","import * as React from \"react\";\n\ninterface ISprops {\n    [propName: string]: any,\n}\ninterface IState {\n}\n\nclass CompanySearch extends React.Component<ISprops, IState>{\n    render() {\n        const { course } = this.props;\n        console.log(this.props)\n        return (\n            <div className=\"company-search\" style={{display: course.length > 0 ? \"block\" : \"none\"}}>\n                {\n                    course.map( (el,index) => {\n                        return (\n                            <div className=\"search-i\" key={index} onClick={() => this.props.checkCompany(el.id,el.name)}>\n                                <p>{el.name}</p>\n                                <p>{el.erp_id}</p>\n                            </div>\n                        )\n                    })\n                }\n                \n            </div>\n        )\n    }\n\n}\n\nexport default CompanySearch ","//react 基础组件加载\nimport * as React from \"react\";\n\nimport { InputItem, Button, Toast } from 'antd-mobile'\nimport qs from 'qs'\nimport BottomBtn from '../../components/btn/bottomBtn'\n\nimport CompanySearch from '../../components/search/companySearch'\nimport { getCompanyList } from '../../api/staff'\nimport { changeMember } from '../../api/sell'\nimport '../../assets/less/edit.less'\n\n\ninterface ISprops {\n    [propName: string]: any;\n}\ninterface IState {\n    company: string,\n    name: string,\n    phone: string,\n    work: string,\n    mail: string,\n    hasError: boolean,\n    mustFlag: boolean,\n    companyList: any,\n    company_id: any,\n    course_member_id: any,\n    disableBtn: any\n}\nexport default class Hello extends React.Component<ISprops, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            company: '',\n            name: '',\n            phone: '',\n            work: '',\n            mail: '',\n            hasError: false,\n            mustFlag: false,\n            companyList: [],\n            company_id: '',\n            course_member_id: '',\n            disableBtn: false\n        }\n    }\n    changePhone = (value: any) => {\n        let phones = /^1\\d{10}$/;\n        if (!phones.test(value)) {\n            this.setState({hasError: true,});\n        } else {\n            this.setState({hasError: false,});\n        }\n        this.setState({\n            phone: value,\n        });\n    }\n    changeMust = (param: any, str: string) => {\n        //必选为空的判断\n        if (param.replace(/\\s/g, '').length === 0) {\n            this.setState({\n                mustFlag: true,\n            });\n            Toast.info(`${str}不能为空`, 2);\n            return false\n        }\n        return true\n    }\n    onErrorClick = () => {\n        //手机号验证设置\n        if (this.state.hasError) {\n            Toast.info('请输入11位有效手机号');\n        }\n    }\n    checkEmail = () => {\n        const { mail } = this.state;\n        var reg = /^([a-zA-Z]|[0-9]|\\.)(\\w|\\-|\\.)+@[a-zA-Z0-9]/;\n        if (!reg.test(mail)) {\n            Toast.fail('请输入正确格式的邮箱',2)\n            this.setState({disableBtn: false})\n            return false\n        } else {\n            return true\n        }\n    }\n    submitEdit = () => {\n        this.setState({disableBtn: true})\n        let search = this.props.location.search;\n        let data = qs.parse(search.substring(1));\n        let { company, name, phone, work, mail, company_id, hasError } = this.state;\n        if (this.changeMust(company, '公司') && this.changeMust(name, '姓名') && this.changeMust(phone,'手机号') && this.checkEmail()  && !hasError) {\n            //发送数据\n            let params = {\n                course_member_id: data.course_member_id,\n                department: company,\n                email: mail,\n                jobtitle: work,\n                name: name,\n                phone: phone,\n                send_type: 1,\n                type: 2\n            };\n            changeMember(params).then(res => {\n                this.setState({disableBtn: false})\n                if (!res.status) {\n                    Toast.info('提交成功');\n                    this.props.history.go(-1);\n                } else {\n                    Toast.fail(res[\"message\"],2);\n                }\n            })\n            \n        }\n\n    }\n    changeCompany = (e) => {\n        //选择公司操作\n        Toast.loading('');\n        let { companyList } = this.state;\n        this.setState({ company: e })\n        let params = {\n            name: e,\n        }\n        getCompanyList(params).then((data) => {\n            if (!data.status) {\n                if (e.replace(/\\s/g, '').length === 0) {\n                    companyList = []\n                } else {\n                    companyList = data.data\n                }\n                this.setState({\n                    companyList: [...companyList]\n                })\n                Toast.hide()\n            }\n        })\n    }\n    checkFromSource = () => {\n        //获取初始数据\n        let search = this.props.location.search;\n        let data = qs.parse(search.substring(1));\n        this.setState({\n            name: data.name,\n            course_member_id: data.course_member_id\n        })\n    }\n    //选择公司\n    checkComItem = (id, name) => {\n        this.setState({\n            company: name,\n            company_id: id,\n            companyList: []\n        })\n    }\n    componentDidMount() {\n        document.title = '更换学员';\n        this.checkFromSource()\n    };\n    render() {\n        const { company, name, phone, work, mail, companyList, disableBtn } = this.state;\n        return (\n            <div className=\"edit\">\n                <InputItem\n                    placeholder=\"请选择公司\"\n                    className=\"input-item\"\n                    value={company}\n                    onChange={this.changeCompany}\n                >*公司</InputItem>\n\n                <InputItem\n                    clear\n                    placeholder=\"请输入姓名\"\n                    className=\"input-item\"\n                    value={name}\n                    onChange={(e) => { this.setState({ name: e }) }}\n                >*姓名</InputItem>\n\n                <InputItem\n                    clear\n                    placeholder=\"请输入手机号\"\n                    className=\"input-item\"\n                    value={phone}\n                    onChange={this.changePhone}\n                    error={this.state.hasError}\n                    onErrorClick={this.onErrorClick}\n                >*手机</InputItem>\n\n                <InputItem\n                    clear\n                    placeholder=\"请输入邮箱\"\n                    className=\"input-item\"\n                    value={mail}\n                    onChange={(e: string) => { this.setState({ mail: e }) }}\n                >*邮箱</InputItem>\n\n                <InputItem\n                    clear\n                    placeholder=\"请输入所在职位\"\n                    className=\"input-item\"\n                    value={work}\n                    onChange={(e) => { this.setState({ work: e }) }}\n                >职位</InputItem>\n\n\n                \n             \n                <BottomBtn btnDisabled={disableBtn} click={this.submitEdit} title=\"确定\"/>\n                <CompanySearch course={companyList} checkCompany={this.checkComItem} />\n            </div>\n        );\n    }\n\n}\n","import axios from 'axios';\nimport { getEnv, LinkHost } from '../util/config';\nlet siteEnv = getEnv();\nlet data = localStorage.getItem('openid') || '{}';\nlet openid = JSON.parse(data).data || '';\n\naxios.defaults.baseURL = `//${siteEnv}${LinkHost}`;\naxios.defaults.headers.post['Content-Type'] = \"application/json\";\naxios.interceptors.request.use(function (config) {\n    //请求头加上openid\n    config.headers.openid = openid;\n\n\n    // Do something before request is sent\n    return Promise.resolve(config);\n}, function (error) {\n\n\n    // Do something with request error\n    return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n\n    // Do something with response data\n    return Promise.resolve(response.data)\n}, function (error) {\n\n    // Do something with response error\n    return Promise.reject(error);\n});\n\n\nexport default class eduAxios {\n    request(options: any) {\n        return axios.request(options);\n    }\n    get(url: string, options = {},flag: any) {\n        let hasOpenId = flag ? {} : { openid:openid };\n        return this.request({\n            url,\n            params: {\n                ...options,\n                ...hasOpenId\n            },\n            \n        })\n    }\n    post(url: string, data: any, options:any = {}) {\n        if( options.openid ){\n            data.openid = openid;\n        }\n        return this.request({\n            method: 'post',\n            url,\n            data,\n            ...options,\n        }); \n        \n    }\n}\nconst instanceAxios = new eduAxios();\nexport const request = instanceAxios.request.bind(instanceAxios);\nexport const get = instanceAxios.get.bind(instanceAxios);\nexport const post = instanceAxios.post.bind(instanceAxios);"],"sourceRoot":""}