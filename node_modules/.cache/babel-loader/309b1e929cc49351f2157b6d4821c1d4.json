{"ast":null,"code":"import _defineProperty from \"/Users/zhenglei/Desktop/zhenglei/create-react-app-ts-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as indexReducer from '../reducers';\nimport * as course from '../reducers/course';\nimport { combineReducers } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport { createLogger } from 'redux-logger';\nconst logger = createLogger();\nconst reducer = combineReducers(_objectSpread({}, indexReducer, {}, course));\nexport default function configureStore(initialState) {\n  // const create = window.devToolsExtension\n  //     ? window.devToolsExtension()(createStore)\n  //     : createStore\n  const store = process.env.NODE_ENV === 'production' ? createStore(reducer, applyMiddleware(thunk, logger, promiseMiddleware)) : createStore(reducer, compose(applyMiddleware(thunk, logger, promiseMiddleware))); // if (module.hot) {\n  // module.hot.accept('../reducers', () => {\n  //     const nextReducer = require('../reducers')\n  //     store.replaceReducer(nextReducer)\n  // })\n  // }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/zhenglei/Desktop/zhenglei/create-react-app-ts-redux/src/store/store.ts"],"names":["createStore","applyMiddleware","compose","thunk","indexReducer","course","combineReducers","promiseMiddleware","createLogger","logger","reducer","configureStore","initialState","store","process","env","NODE_ENV"],"mappings":";;;;;;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,KAAKC,YAAZ,MAA8B,aAA9B;AACA,OAAO,KAAKC,MAAZ,MAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AAGA,SAASC,YAAT,QAA6B,cAA7B;AACA,MAAMC,MAAM,GAAGD,YAAY,EAA3B;AAMA,MAAME,OAAO,GAAGJ,eAAe,mBACxBF,YADwB,MAExBC,MAFwB,EAA/B;AAIA,eAAe,SAASM,cAAT,CAAwBC,YAAxB,EAA2C;AACtD;AACA;AACA;AACA,QAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACVhB,WAAW,CAACU,OAAD,EAAUT,eAAe,CAACE,KAAD,EAAQM,MAAR,EAAgBF,iBAAhB,CAAzB,CADD,GAINP,WAAW,CAACU,OAAD,EAAUR,OAAO,CACxBD,eAAe,CAACE,KAAD,EAAQM,MAAR,EAAgBF,iBAAhB,CADS,CAAjB,CAJnB,CAJsD,CAatD;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOM,KAAP;AACH","sourcesContent":["\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport * as indexReducer from '../reducers'\nimport * as course from '../reducers/course'\nimport { combineReducers } from 'redux';\nimport promiseMiddleware from 'redux-promise';\n\n\nimport { createLogger } from 'redux-logger';\nconst logger = createLogger();\ndeclare const window: any;\n//声明 window 为其可以加入原来没有的属性\ndeclare const module: any;\n\n\nconst reducer = combineReducers({\n    ...indexReducer,\n    ...course\n})\nexport default function configureStore(initialState: any) {\n    // const create = window.devToolsExtension\n    //     ? window.devToolsExtension()(createStore)\n    //     : createStore\n    const store = process.env.NODE_ENV === 'production' ?\n        createStore(reducer, applyMiddleware(thunk, logger, promiseMiddleware))\n        :\n        (\n            createStore(reducer, compose(\n                applyMiddleware(thunk, logger, promiseMiddleware)\n            )))\n\n\n    // if (module.hot) {\n    // module.hot.accept('../reducers', () => {\n    //     const nextReducer = require('../reducers')\n    //     store.replaceReducer(nextReducer)\n    // })\n    // }\n\n    return store\n}\n\n"]},"metadata":{},"sourceType":"module"}